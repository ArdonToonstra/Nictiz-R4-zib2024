---
# The issues here are deliberate deviations from the guidelines, as flagged by the qa tooling.
# For each issue documented, a reason for deviating from the guidelines is given.

issues should occur: true

zib-AddressInformation:
  zib deviations:
    Address.line.extension:houseNumberIndication.value[x]:
      - datatype: string instead of CD
        reason: The mapping of zib AddressInformation on the FHIR Address datatype is the result of compatibility with HL7v3, which is the format that a lot of healthcare data in the Netherlands is stored in. As a result of this, the zib concept HouseNumberIndication with CD datatype is mapped to a FHIR string datatype.
    Address.line.extension:*.value[x]:
      - cardinality: 1..1 instead of 0..1
        reason: The value of the extension is required, but the extension itself is optional, making the effective cardinality 0..1 as required by the zib.

zib-ContactInformation-TelephoneNumbers:
  zib deviations:
    ContactPoint.system:
    - cardinality: 1..1 instead of 0..1
      reason: Although TelecomType and NumberType are optional in the zib, ContactPoint.system is used to identify the TelephoneNumbers concept itself when this datatype is added to a profile. If only a telephone number is given without TelecomType and NumberType, it will fall in the default slice of the sliced element with datatype ContactPoint.
      
zib-HealthProfessional-Practitioner:
  zib deviations:
    Practitioner.name*:
      - datatype: HumanName instead of a reference
        reason: A name in FHIR is represented using the HumanName datatype, not as a separate resource.
    Practitioner.name:
      - cardinality: 0..* instead of 0..1
        reason: The name information according to zib NameInformation may be split up over multiple instances of Practitioner.name. 
    Practitioner.telecom:
      - cardinality: 0..* instead of 0..1
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib part ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby this mapping is still honoring the cardinality requirements of the zib.
    Practitioner.telecom*:
      - datatype: ContactPoint instead of a reference
        reason: ContactInformation in FHIR is represented using the ContactPoint datatype, not as a separate resource. Because the FHIR profile for ContactInformation consists of two parts the root concept of ContactInformation is mapped on .telecom.
    Practitioner.address:
      - datatype: Address instead of a reference
        reason: An address in FHIR is represented using the Address datatype, not as a separate resource.

zib-HealthProfessional-PractitionerRole:
  zib deviations:
    PractitionerRole.telecom:
      - cardinality: 0..* instead of 0..1
        reason: The cardinality mismatch between the zib (0..1) and FHIR (0..*) is explained by the missing root element of zib part ContactInformation in FHIR. Instead, the two containers of the zib (TelephoneNumbers and EmailAddresses), which both have a cardinality of 0..*, are mapped directly into the resource. Thereby this mapping is still honoring the cardinality requirements of the zib.
    PractitionerRole.telecom*:
      - datatype: ContactPoint instead of a reference
        reason: ContactInformation in FHIR is represented using the ContactPoint datatype, not as a separate resource. Because the FHIR profile for ContactInformation consists of two parts the root concept of ContactInformation is mapped on .telecom.

zib-NameInformation:
  zib deviations:
    HumanName.prefix:
      - cardinality: 0..* instead of 0..1
        reason: Both prefix and suffix are mapped to the Titles concept from the zib. There's a mismatch however in the way this information is represented in the zib and in FHIR. The mapping is documented in the profile.
    HumanName.suffix:
      - cardinality: 0..* instead of 0..1
        reason: Both prefix and suffix are mapped to the Titles concept from the zib. There's a mismatch however in the way this information is represented in the zib and in FHIR. The mapping is documented in the profile.
    HumanName.given:
      - short: FirstName / Initial
        reason: The zib defines both the complete list of first names and of initials as a single string. In FHIR this is done fundamentally different, by using separate names. Hence, the short has been changed to the singular form.
      - alias: first name,middle name,Voornaam,Initiaal
        reason: The first two initials are provided by FHIR. For the singular form of the latter two, see the remark above.
      - cardinality: 0..* instead of 0..1
        reason: See the remark above.
    HumanName.family.extension:*.value[x]:
      - cardinality: 1..1 instead of 0..1
        reason: The value of the extension is required, but the extension itself is optional, making the effective cardinality 0..1 as required by the zib.

zib-NameInformation.GivenName:
  zib deviations:
    HumanName.given:
      - cardinality: 1..* instead of 0..1
        reason: The GivenName is optional according to the zib, but when this datatype profile is used, a name should be provided.

---
# The following issues are not "real" deviations stemming from design choices, but rather problems that pop up due to
# shortcomings in tooling, the used terminology server, etc.
# These might occur in one or more profiles, or in none if they have been fixed in the meantime. 

issues should occur: false

zib-ContactInformation-TelephoneNumbers:
  zib deviations:
    ContactPoint.extension:comment.value[x]:
    - cardinality: 0..* instead of 0..1
      reason: The cardinality of the extension itself is 0..1, making the effective cardinality 0..1 as required by the zib. It seems the QA tooling does not take into account the cardinality of the extension element itself.
    ContactPoint.extension:purpose.value[x]:
    - cardinality: 0..* instead of 0..1
      reason: The cardinality of the extension itself is 0..1, making the effective cardinality 0..1 as required by the zib. It seems the QA tooling does not take into account the cardinality of the extension element itself.

zib-NameInformation:
  zib deviations:
    HumanName.extension:nameUsage.value[x]:
    - cardinality: 0..* instead of 0..1
      reason: The cardinality of the extension itself is 0..1, making the effective cardinality 0..1 as required by the zib. It seems the QA tooling does not take into account the cardinality of the extension element itself.